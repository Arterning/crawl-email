import subprocess
import re
import time
import sys
import os
from datetime import datetime, timedelta

def convert_to_netscape(input_filename, output_filename="netscape-cookies.txt"):
    """
    将 Chrome 复制的 cookies 文件转换为 Netscape 格式并保存到指定文件。
    输入文件每行格式：name  value  domain  path  expiration  size  httpOnly
    输出 Netscape 格式：domain  flag  path  secure  expiry  name  value
    """
    try:
        if not os.path.exists(input_filename):
            print(f"错误：文件 {input_filename} 不存在", file=sys.stderr)
            sys.exit(1)

        with open(input_filename, 'r', encoding='utf-8') as f:
            content = f.read()
            cookies = content.split('\n')

        # 打开输出文件
        with open(output_filename, 'w', encoding='utf-8') as f:
            # 输出 Netscape 文件头
            f.write("# Netscape HTTP Cookie File\n")
            f.write("# Generated by convert_cookies.py\n\n")

            for cookie in cookies:
                # 跳过空行
                if not cookie.strip():
                    continue

                # 分割 cookie 字段
                fields = cookie.split('\t')
                if len(fields) < 5:
                    continue  # 跳过格式不正确的行
                name, value, domain, path, expiration = fields[:5]
                httpOnly = fields[6] if len(fields) > 6 else 'FALSE'

                if not name:
                    continue

                # 处理 domain：如果不以 '.' 开头，添加 '.'
                if domain and domain[0] != '.':
                    domain = '.' + domain

                # 处理 httpOnly
                httpOnly = 'TRUE' if httpOnly == '✓' else 'FALSE'

                # 处理 expiration
                if expiration.lower() == 'session':
                    expiration = datetime.now() + timedelta(days=1)
                try:
                    expiration = int(datetime.fromisoformat(expiration.replace('Z', '+00:00')).timestamp())
                except ValueError:
                    # 如果日期格式无效，设为会话 cookie
                    expiration = 0

                # 写入 Netscape 格式的一行
                f.write(f"{domain}\tTRUE\t{path}\t{httpOnly}\t{expiration}\t{name}\t{value}\n")

        print(f"已成功将 cookies 转换为 Netscape 格式，保存到 {output_filename}")

    except Exception as e:
        print(f"转换失败：{e}", file=sys.stderr)
        sys.exit(1)

# 示例 1：执行简单命令并获取输出
def run_command(command):
    try:
        # 执行命令，捕获输出
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return {
            "stdout": result.stdout.strip(),
            "stderr": result.stderr.strip(),
            "returncode": result.returncode
        }
    except subprocess.SubprocessError as e:
        print(f"命令执行失败：{e}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("用法：python convert_cookies.py <file-with-cookies-copy-pasted-from-Chrome.txt> > netscape-cookies.txt", file=sys.stderr)
        print("\n确保将 <file-with-cookies-copy-pasted-from-Chrome.txt> 替换为从 Chrome 的 Application -> Storage -> Cookies 复制的 cookies 文件名。", file=sys.stderr)
        print("\n然后，将 'netscape-cookies.txt' 文件传递给 'curl' 或 'youtube-dl' 或其他支持 Netscape cookies 格式的工具。", file=sys.stderr)
        sys.exit(1)

    filename = sys.argv[1]
    convert_to_netscape(filename)
    result = run_command("curl --cookie netscape-cookies.txt 'https://mail.yahoo.com/d/folders/1?reason=onboarded' --proxy http://127.0.0.1:8080")  # 使用管道的命令
    regex = r'"id":\s*"([A-Za-z0-9_-]{27})"'
    matches = re.findall(regex, result["stdout"])
    matches = list(set(matches))
    print("获取到{}封邮件".format(len(matches)))
    #print(matches)
    for msg in matches:
        print(msg)
        #url = f"https://mail.yahoo.com/ws/v3/mailboxes/@/messages/@.id=={msg}/content/rawplaintext"
        output_file = f"./exportmail/output_{msg}.eml"
        cmd=f"curl --proxy http://127.0.0.1:8080  -o {output_file} --cookie netscape-cookies.txt 'https://mail.yahoo.com/ws/v3/mailboxes/@/messages/@.id=={msg}/content/rawplaintext'"
        result =run_command(cmd)
        #regex_file = r"curl: Saved to filename '([^']+)'"
        print(result)
        #matches_file = re.findall(regex_file, result["stdout"])
        #print(matches_file)
        time.sleep(10)
