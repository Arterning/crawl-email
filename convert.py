import subprocess
import re
import time
import sys
import os
import base64
from datetime import datetime, timedelta

def convert_to_base64(input_filename, output_filename="cookies.txt"):
    """
    将 Chrome 复制的 cookies 文件转换为 Base64 编码并保存到指定文件。
    输入文件每行格式：name  value  domain  path  expiration  size  httpOnly
    输出格式：Base64 编码的字符串
    """
    try:
        if not os.path.exists(input_filename):
            print(f"错误：文件 {input_filename} 不存在", file=sys.stderr)
            sys.exit(1)

        base64_str = ""

        with open(input_filename, 'r', encoding='utf-8') as f:
            content = f.read()
            # 使用 base64 模块进行编码
            base64_bytes = base64.b64encode(content.encode('utf-8'))
            base64_str = base64_bytes.decode('utf-8')

        # 打开输出文件
        with open(output_filename, 'w', encoding='utf-8') as f:
            f.write(base64_str)

        print(f"已成功将 cookies 转换为 Base64 编码，保存到 {output_filename}")

    except Exception as e:
        print(f"转换失败：{e}", file=sys.stderr)
        sys.exit(1)


def decode_base64(base64_str):
    """
    将 Base64 字符串解码成原始内容
    
    参数:
        base64_str (str): Base64 编码的字符串
        
    返回:
        str: 解码后的原始内容
        
    异常:
        如果输入不是有效的 Base64 字符串，会抛出异常
    """
    try:
        # 将 Base64 字符串转换为 bytes
        base64_bytes = base64_str.encode('utf-8')
        
        # 解码 Base64
        decoded_bytes = base64.b64decode(base64_bytes)
        
        # 将 bytes 转换回字符串
        original_content = decoded_bytes.decode('utf-8')
        
        return original_content
    
    except Exception as e:
        raise ValueError(f"Base64 解码失败: {str(e)}")


def convert_to_netscape(input_filename, output_filename="netscape-cookies.txt"):
    """
    将 Chrome 复制的 cookies 文件转换为 Netscape 格式并保存到指定文件。
    输入文件每行格式：name  value  domain  path  expiration  size  httpOnly
    输出 Netscape 格式：domain  flag  path  secure  expiry  name  value
    """
    try:
        if not os.path.exists(input_filename):
            print(f"错误：文件 {input_filename} 不存在", file=sys.stderr)
            sys.exit(1)

        with open(input_filename, 'r', encoding='utf-8') as f:
            content = f.read()
            cookies = content.split('\n')

        # 打开输出文件
        with open(output_filename, 'w', encoding='utf-8') as f:
            # 输出 Netscape 文件头
            f.write("# Netscape HTTP Cookie File\n")
            f.write("# Generated by convert_cookies.py\n\n")

            for cookie in cookies:
                # 跳过空行
                if not cookie.strip():
                    continue

                # 分割 cookie 字段
                fields = cookie.split('\t')
                if len(fields) < 5:
                    continue  # 跳过格式不正确的行
                name, value, domain, path, expiration = fields[:5]
                httpOnly = fields[6] if len(fields) > 6 else 'FALSE'

                if not name:
                    continue

                # 处理 domain：如果不以 '.' 开头，添加 '.'
                if domain and domain[0] != '.':
                    domain = '.' + domain

                # 处理 httpOnly
                httpOnly = 'TRUE' if httpOnly == '✓' else 'FALSE'

                # 处理 expiration
                if expiration.lower() == 'session':
                    expiration = datetime.now() + timedelta(days=1)
                try:
                    expiration = int(datetime.fromisoformat(expiration.replace('Z', '+00:00')).timestamp())
                except ValueError:
                    # 如果日期格式无效，设为会话 cookie
                    expiration = 0

                # 写入 Netscape 格式的一行
                f.write(f"{domain}\tTRUE\t{path}\t{httpOnly}\t{expiration}\t{name}\t{value}\n")

        print(f"已成功将 cookies 转换为 Netscape 格式，保存到 {output_filename}")

    except Exception as e:
        print(f"转换失败：{e}", file=sys.stderr)
        sys.exit(1)
        
def convert_cookies_to_netscape(cookies: str, output_filename="netscape-cookies.txt"):
    """
    将 Chrome 复制的 cookies 转换为 Netscape 格式并保存到指定文件。
    输入文件每行格式：name  value  domain  path  expiration  size  httpOnly
    输出 Netscape 格式：domain  flag  path  secure  expiry  name  value
    """
    try:

        # 打开输出文件
        with open(output_filename, 'w', encoding='utf-8') as f:
            # 输出 Netscape 文件头
            f.write("# Netscape HTTP Cookie File\n")
            f.write("# Generated by convert_cookies.py\n\n")

            # 分割 cookies 字符串为行
            cookies = cookies.strip().split('\n')
            if not cookies:
                print("没有找到有效的 cookies 数据")
                return
            print(f"找到 {len(cookies)} 条 cookies 数据")

            for cookie in cookies:
                # 跳过空行
                if not cookie.strip():
                    print("跳过空行")
                    continue

                # 分割 cookie 字段
                fields = cookie.split('\t')
                if len(fields) < 5:
                    print(f"跳过格式不正确的行: {cookie}")
                    continue  # 跳过格式不正确的行
                name, value, domain, path, expiration = fields[:5]
                httpOnly = fields[6] if len(fields) > 6 else 'FALSE'

                if not name:
                    print(f"跳过没有名称的 cookie: {cookie}")
                    continue

                # 处理 domain：如果不以 '.' 开头，添加 '.'
                if domain and domain[0] != '.':
                    domain = '.' + domain

                # 处理 httpOnly
                httpOnly = 'TRUE' if httpOnly == '✓' else 'FALSE'

                # 处理 expiration
                if expiration.lower() == 'session':
                    expiration = datetime.now() + timedelta(days=1)
                try:
                    expiration = int(datetime.fromisoformat(expiration.replace('Z', '+00:00')).timestamp())
                except ValueError:
                    # 如果日期格式无效，设为会话 cookie
                    expiration = 0

                # 写入 Netscape 格式的一行
                f.write(f"{domain}\tTRUE\t{path}\t{httpOnly}\t{expiration}\t{name}\t{value}\n")

        print(f"已成功将 cookies 转换为 Netscape 格式，保存到 {output_filename}")

    except Exception as e:
        print(f"转换失败：{e}", file=sys.stderr)
        sys.exit(1)

